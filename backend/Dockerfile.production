# Production Dockerfile for Indorsement Platform Backend
# Multi-stage build for optimized production image

# Build Stage
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    libc6-compat

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install dependencies (including dev dependencies for build)
RUN npm ci --include=dev

# Copy source code
COPY src/ ./src/
COPY public/ ./public/

# Build the application
RUN npm run build

# Remove dev dependencies and install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Production Stage
FROM node:18-alpine AS runtime

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S indorsement -u 1001 -G nodejs

# Install production runtime dependencies
RUN apk add --no-cache \
    dumb-init \
    ca-certificates \
    curl \
    tzdata

# Set timezone
ENV TZ=UTC

# Create app directory with proper permissions
WORKDIR /app
RUN chown -R indorsement:nodejs /app

# Copy built application from builder stage
COPY --from=builder --chown=indorsement:nodejs /app/dist ./dist
COPY --from=builder --chown=indorsement:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=indorsement:nodejs /app/package*.json ./

# Create necessary directories
RUN mkdir -p /app/logs /app/uploads /app/temp && \
    chown -R indorsement:nodejs /app/logs /app/uploads /app/temp

# Copy additional runtime files
COPY --chown=indorsement:nodejs scripts/docker-entrypoint.sh ./docker-entrypoint.sh
COPY --chown=indorsement:nodejs config/ ./config/

# Make entrypoint script executable
RUN chmod +x ./docker-entrypoint.sh

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3000
ENV LOG_LEVEL=info

# Security: Don't run as root
USER indorsement

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Expose port
EXPOSE 3000 9090

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the application
CMD ["./docker-entrypoint.sh"]

# Metadata
LABEL \
    org.opencontainers.image.title="Indorsement Platform Backend" \
    org.opencontainers.image.description="Production backend for Indorsement Platform" \
    org.opencontainers.image.vendor="Indorsement Platform" \
    org.opencontainers.image.authors="DevOps Team <devops@indorsement.com>" \
    org.opencontainers.image.source="https://github.com/kdmartin1116-boop/IndorsementStuff" \
    org.opencontainers.image.documentation="https://docs.indorsement.com" \
    org.opencontainers.image.version="1.0.0"